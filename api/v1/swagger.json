{
  "swagger": "2.0",
  "info": {
    "description": "Polyaxon SDK for Operator specification",
    "title": "Polyaxon Operator",
    "version": "v1.0"
  },
  "paths": {},
  "definitions": {
    "v1.BatchJobSpec": {
      "description": "BatchJobSpec defines the desired state of a batch job",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "Template describes the pods that will be created.",
          "$ref": "#/definitions/v1.PodTemplateSpec"
        },
        "termination": {
          "description": "Specifies the number of retries before marking this job failed.",
          "$ref": "#/definitions/v1.TerminationSpec"
        }
      }
    },
    "v1.MPIJobSpec": {
      "description": "MPIJobSpec defines the desired state of an mpi job",
      "type": "object",
      "required": [
        "replicaSpecs"
      ],
      "properties": {
        "cleanPodPolicy": {
          "description": "Defines the policy for cleaning up pods after the Job completes. Defaults to Running.",
          "type": "string"
        },
        "replicaSpecs": {
          "description": "`MPIReplicaSpecs` contains maps from `MPIReplicaType` to `ReplicaSpec` that specify the MPI replicas to run.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/github.com.kubeflow.tf-operator.pkg.apis.common.v1.ReplicaSpec"
          }
        },
        "slotsPerWorker": {
          "description": "CleanPodPolicy defines the policy that whether to kill pods after the job completes. Defaults to None.",
          "type": "integer",
          "format": "int32"
        },
        "termination": {
          "description": "Specifies the number of retries before marking this job failed.",
          "$ref": "#/definitions/v1.TerminationSpec"
        }
      }
    },
    "v1.Operation": {
      "description": "Operation is the Schema for the operations API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "batchJobSpec": {
          "description": "Specification of the desired behavior of a job.",
          "$ref": "#/definitions/v1.BatchJobSpec"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta"
        },
        "mpiJobSpec": {
          "description": "Specification of the desired behavior of a MPIJob.",
          "$ref": "#/definitions/v1.MPIJobSpec"
        },
        "pytorchJobSpec": {
          "description": "Specification of the desired behavior of a PytorchJob.",
          "$ref": "#/definitions/v1.PytorchJobSpec"
        },
        "serviceSpec": {
          "description": "Specification of the desired behavior of a Service.",
          "$ref": "#/definitions/v1.ServiceSpec"
        },
        "status": {
          "description": "Current status of an op.",
          "$ref": "#/definitions/v1.OperationStatus"
        },
        "tfJobSpec": {
          "description": "Specification of the desired behavior of a TFJob.",
          "$ref": "#/definitions/v1.TFJobSpec"
        }
      }
    },
    "v1.OperationCondition": {
      "description": "OperationCondition defines the conditions of Operation or OpService",
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "Last time the condition transitioned.",
          "$ref": "#/definitions/v1.Time"
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "$ref": "#/definitions/v1.Time"
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for this container condition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of the condition.",
          "type": "string"
        }
      }
    },
    "v1.OperationStatus": {
      "description": "OperationStatus defines the observed state of a job or a service",
      "type": "object",
      "properties": {
        "completionTime": {
          "description": "Represents the time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        },
        "conditions": {
          "description": "The latest available observations of an object's current state.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.OperationCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "lastReconcileTime": {
          "description": "Represents the last time when the job was reconciled. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        },
        "startTime": {
          "description": "Represents the time when the job was acknowledged by the controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        }
      }
    },
    "v1.PytorchJobSpec": {
      "description": "PytorchJobSpec defines the desired state of a pytorch job",
      "type": "object",
      "required": [
        "replicaSpecs"
      ],
      "properties": {
        "cleanPodPolicy": {
          "description": "Defines the policy for cleaning up pods after the Job completes. Defaults to Running.",
          "type": "string"
        },
        "replicaSpecs": {
          "description": "A map of PyTorchReplicaType (type) to ReplicaSpec (value). Specifies the PyTorch cluster configuration. For example,\n  {\n    \"Master\": PyTorchReplicaSpec,\n    \"Worker\": PyTorchReplicaSpec,\n  }",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/github.com.kubeflow.tf-operator.pkg.apis.common.v1.ReplicaSpec"
          }
        },
        "termination": {
          "description": "Specifies the number of retries before marking this job failed.",
          "$ref": "#/definitions/v1.TerminationSpec"
        }
      }
    },
    "v1.ServiceSpec": {
      "description": "ServiceSpec defines the desired state of a service",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "ports": {
          "description": "optional List of ports to expose on the service",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "replicas": {
          "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.",
          "type": "integer",
          "format": "int32"
        },
        "template": {
          "description": "Template describes the pods that will be created.",
          "$ref": "#/definitions/v1.PodTemplateSpec"
        },
        "termination": {
          "description": "Specifies the number of retries before marking this job failed.",
          "$ref": "#/definitions/v1.TerminationSpec"
        }
      }
    },
    "v1.TFJobSpec": {
      "description": "TFJobSpec defines the desired state of a tf job",
      "type": "object",
      "required": [
        "replicaSpecs"
      ],
      "properties": {
        "cleanPodPolicy": {
          "description": "Defines the policy for cleaning up pods after the Job completes. Defaults to Running.",
          "type": "string"
        },
        "replicaSpecs": {
          "description": "A map of TFReplicaType (type) to ReplicaSpec (value). Specifies the TF cluster configuration. For example,\n  {\n    \"PS\": ReplicaSpec,\n    \"Worker\": ReplicaSpec,\n  }",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/github.com.kubeflow.tf-operator.pkg.apis.common.v1.ReplicaSpec"
          }
        },
        "termination": {
          "description": "Specifies the number of retries before marking this job failed.",
          "$ref": "#/definitions/v1.TerminationSpec"
        }
      }
    },
    "v1.TerminationSpec": {
      "description": "TerminationSpec defines the desired state of a job or a service",
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Specifies the duration (in seconds) since startTime during which the job can remain active before it is terminated. Must be a positive integer. This setting applies only to pods where restartPolicy is OnFailure or Always.",
          "type": "integer",
          "format": "int64"
        },
        "backoffLimit": {
          "description": "Specifies the number of retries before marking this job failed. Defaults to 1",
          "type": "integer",
          "format": "int32"
        },
        "ttlSecondsAfterFinished": {
          "description": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
